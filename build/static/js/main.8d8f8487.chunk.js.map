{"version":3,"sources":["models/CalcMethods.ts","models/ThemeModels.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CalcMethod","Themes","App","useState","screen","setScreen","memoryA","setMemoryA","memoryB","setMemoryB","switchedMemory","setSwitchedMemory","calcMethod","setCalcMethod","SYSTEM","selectedTheme","setSelectedTheme","setNumber","num","setNewTheme","event","val","parseInt","target","value","THEME1","document","body","removeAttribute","classList","add","THEME2","THEME3","className","type","id","name","checked","onChange","htmlFor","minSize","maxSize","onClick","ADD","setTimeout","MINUS","MULTIPLY","DIVIDE","beforeVal","slice","num1","parseFloat","replace","num2","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d8f8487.chunk.js","sourcesContent":["export enum CalcMethod {\n    ADD = 1,\n    MINUS = 2,\n    MULTIPLY = 3,\n    DIVIDE = 4,\n}\n","export enum Themes {\n    THEME1 = 1,\n    THEME2 = 2,\n    THEME3 = 3,\n    SYSTEM = 4,\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { ReactFitty } from \"react-fitty\";\nimport { CalcMethod, Themes } from \"./models\";\n\nconst App = () => {\n    const [screen, setScreen] = useState<string>(\"0\");\n    const [memoryA, setMemoryA] = useState<string | null>(null);\n    const [memoryB, setMemoryB] = useState<string | null>(null);\n    const [switchedMemory, setSwitchedMemory] = useState(false);\n    const [calcMethod, setCalcMethod] = useState(0);\n    const [selectedTheme, setSelectedTheme] = useState<Themes>(Themes.SYSTEM);\n\n    const setNumber = (num: string) => {\n        if (!switchedMemory) {\n            if (!memoryA) {\n                setScreen(num);\n                setMemoryA(num);\n            } else {\n                setScreen(screen + num);\n                setMemoryA(memoryA + num);\n            }\n        } else {\n            if (!memoryB) {\n                setScreen(num);\n                setMemoryB(num);\n            } else {\n                setScreen(screen + num);\n                setMemoryB(memoryB + num);\n            }\n        }\n    };\n\n    const add = () => {\n        setScreen(\" \");\n        setSwitchedMemory(true);\n        setCalcMethod(CalcMethod.ADD);\n        setTimeout(() => {\n            if (memoryA) {\n                setScreen(memoryA);\n            }\n        }, 100);\n    };\n    const minus = () => {\n        setScreen(\" \");\n        setSwitchedMemory(true);\n        setCalcMethod(CalcMethod.MINUS);\n        setTimeout(() => {\n            if (memoryA) {\n                setScreen(memoryA);\n            }\n        }, 100);\n    };\n    const multiply = () => {\n        setScreen(\" \");\n        setSwitchedMemory(true);\n        setCalcMethod(CalcMethod.MULTIPLY);\n        setTimeout(() => {\n            if (memoryA) {\n                setScreen(memoryA);\n            }\n        }, 100);\n    };\n    const divide = () => {\n        setScreen(\" \");\n        setSwitchedMemory(true);\n        setCalcMethod(CalcMethod.DIVIDE);\n        setTimeout(() => {\n            if (memoryA) {\n                setScreen(memoryA);\n            }\n        }, 100);\n    };\n\n    const del = () => {\n        if (!switchedMemory) {\n            if (!memoryA) return;\n\n            const beforeVal = memoryA.slice(0, -1);\n            setScreen(beforeVal);\n            setMemoryA(beforeVal);\n        } else {\n            if (!memoryB) return;\n\n            const beforeVal = memoryB.slice(0, -1);\n            setScreen(beforeVal);\n            setMemoryB(beforeVal);\n        }\n    };\n\n    const setComma = () => {\n        if (!switchedMemory) {\n            if (!memoryA) {\n                setScreen(\"0,\");\n                setMemoryA(\"0,\");\n            } else {\n                setScreen(screen + \",\");\n                setMemoryA(memoryA + \",\");\n            }\n        } else {\n            if (!memoryB) {\n                setScreen(\"0,\");\n                setMemoryB(\"o,\");\n            } else {\n                setScreen(screen + \",\");\n                setMemoryB(memoryB + \",\");\n            }\n        }\n    };\n\n    const reset = () => {\n        setScreen(\"0\");\n        setMemoryA(null);\n        setMemoryB(null);\n        setSwitchedMemory(false);\n        setCalcMethod(0);\n    };\n\n    const calculate = () => {\n        if (!memoryA && !memoryB) return;\n\n        switch (calcMethod) {\n            case CalcMethod.ADD: {\n                const num1 = parseFloat(memoryA!.replace(\",\", \".\"));\n                const num2 = parseFloat(memoryB!.replace(\",\", \".\"));\n                const result = num1 + num2;\n                setScreen(result.toString().replace(\".\", \",\"));\n                break;\n            }\n\n            case CalcMethod.MINUS: {\n                const num1 = parseFloat(memoryA!.replace(\",\", \".\"));\n                const num2 = parseFloat(memoryB!.replace(\",\", \".\"));\n                const result = num1 - num2;\n                setScreen(result.toString().replace(\".\", \",\"));\n                break;\n            }\n\n            case CalcMethod.MULTIPLY: {\n                const num1 = parseFloat(memoryA!.replace(\",\", \".\"));\n                const num2 = parseFloat(memoryB!.replace(\",\", \".\"));\n                const result = num1 * num2;\n                setScreen(result.toString().replace(\".\", \",\"));\n                break;\n            }\n\n            case CalcMethod.DIVIDE: {\n                const num1 = parseFloat(memoryA!.replace(\",\", \".\"));\n                const num2 = parseFloat(memoryB!.replace(\",\", \".\"));\n                const result = num1 / num2;\n                setScreen(result.toString().replace(\".\", \",\"));\n                break;\n            }\n\n            default:\n                break;\n        }\n    };\n\n    const setNewTheme = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val = parseInt(event.target.value);\n\n        if (val === Themes.THEME1) {\n            document.body.removeAttribute(\"class\");\n            document.body.classList.add(\"theme1\");\n        } else if (val === Themes.THEME2) {\n            document.body.removeAttribute(\"class\");\n            document.body.classList.add(\"theme2\");\n        } else if (val === Themes.THEME3) {\n            document.body.removeAttribute(\"class\");\n            document.body.classList.add(\"theme3\");\n        } else if (val === Themes.SYSTEM) {\n            document.body.removeAttribute(\"class\");\n            document.body.classList.add(\"theme3\");\n        }\n\n        setSelectedTheme(val);\n    };\n\n    return (\n        <main className=\"calculator-app\">\n            <header className=\"header\">\n                <div className=\"header__logo\">calc</div>\n                <div className=\"header__theme-switch\">\n                    <div className=\"header__theme-switch_content\">\n                        <div className=\"header__theme-switch_title\">Theme</div>\n                        <div className=\"header__theme-switch_toggle\">\n                            <div className=\"header__theme-switch_toggle-numbers\">\n                                <ol className=\"header__theme-switch_toggle-numbers-list\">\n                                    <li>\n                                        <span className=\"sr-only\">Theme 1</span>\n                                    </li>\n                                    <li>\n                                        <span className=\"sr-only\">Theme 2</span>\n                                    </li>\n                                    <li>\n                                        <span className=\"sr-only\">System</span>\n                                    </li>\n                                </ol>\n                            </div>\n                            <div className=\"header__theme-switch_toggle-content\">\n                                <div className=\"switch-field\">\n                                    <input\n                                        type=\"radio\"\n                                        id=\"theme-one\"\n                                        name=\"theme-one\"\n                                        value={Themes.THEME1}\n                                        checked={\n                                            selectedTheme === Themes.THEME1\n                                        }\n                                        onChange={setNewTheme}\n                                    />\n                                    <label htmlFor=\"theme-one\">One</label>\n                                    <input\n                                        type=\"radio\"\n                                        id=\"theme-two\"\n                                        name=\"theme-two\"\n                                        value={Themes.THEME2}\n                                        checked={\n                                            selectedTheme === Themes.THEME2\n                                        }\n                                        onChange={setNewTheme}\n                                    />\n                                    <label htmlFor=\"theme-two\">Two</label>\n                                    <input\n                                        type=\"radio\"\n                                        id=\"theme-three\"\n                                        name=\"theme-three\"\n                                        value={Themes.THEME3}\n                                        checked={\n                                            selectedTheme === Themes.THEME3\n                                        }\n                                        onChange={setNewTheme}\n                                    />\n                                    <label htmlFor=\"theme-three\">Three</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            <section className=\"screen\">\n                <div className=\"screen__content\">\n                    <ReactFitty minSize={12} maxSize={46}>\n                        {screen}\n                    </ReactFitty>\n                </div>\n            </section>\n            <section className=\"keypad\">\n                {/* Numbers */}\n                <button\n                    className=\"button button-1\"\n                    onClick={() => setNumber(\"1\")}\n                >\n                    <span>1</span>\n                </button>\n                <button\n                    className=\"button button-2\"\n                    onClick={() => setNumber(\"2\")}\n                >\n                    <span>2</span>\n                </button>\n                <button\n                    className=\"button button-3\"\n                    onClick={() => setNumber(\"3\")}\n                >\n                    <span>3</span>\n                </button>\n                <button\n                    className=\"button button-4\"\n                    onClick={() => setNumber(\"4\")}\n                >\n                    <span>4</span>\n                </button>\n                <button\n                    className=\"button button-5\"\n                    onClick={() => setNumber(\"5\")}\n                >\n                    <span>5</span>\n                </button>\n                <button\n                    className=\"button button-6\"\n                    onClick={() => setNumber(\"6\")}\n                >\n                    <span>6</span>\n                </button>\n                <button\n                    className=\"button button-7\"\n                    onClick={() => setNumber(\"7\")}\n                >\n                    <span>7</span>\n                </button>\n                <button\n                    className=\"button button-8\"\n                    onClick={() => setNumber(\"8\")}\n                >\n                    <span>8</span>\n                </button>\n                <button\n                    className=\"button button-9\"\n                    onClick={() => setNumber(\"9\")}\n                >\n                    <span>9</span>\n                </button>\n                <button\n                    className=\"button button-0\"\n                    onClick={() => setNumber(\"0\")}\n                >\n                    <span>0</span>\n                </button>\n\n                {/* Functions */}\n                <button className=\"button button-plus\" onClick={add}>\n                    <span>+</span>\n                </button>\n                <button className=\"button button-minus\" onClick={minus}>\n                    <span>-</span>\n                </button>\n                <button className=\"button button-multiply\" onClick={multiply}>\n                    <span>x</span>\n                </button>\n                <button className=\"button button-divide\" onClick={divide}>\n                    <span>/</span>\n                </button>\n                <button className=\"button button-del\" onClick={del}>\n                    <span>del</span>\n                </button>\n                <button className=\"button button-reset\" onClick={reset}>\n                    <span>reset</span>\n                </button>\n\n                {/* Comma */}\n                <button className=\"button button-comma\" onClick={setComma}>\n                    <span>.</span>\n                </button>\n\n                {/* Caluclate */}\n                <button className=\"button button-calculate\" onClick={calculate}>\n                    <span>=</span>\n                </button>\n            </section>\n        </main>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}